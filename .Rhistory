#usuwam kolumnę "X", która opisywała nr obserwacji (nie id). Po połączeniu zbiorów numery się powtarzały wskazując dwie obserwacje
dane <- dane %>% select(-"X")
#zmieniam typ w kolumnie zrodlo na "factor"
dane <- mutate_at(.tbl = dane, vars("zrodlo"), funs(as.factor))
#usuwam przedrostek "nr " oraz zamieniam ciąg cyfr w kolumnie "ID" na typ numeryczny
dane <- dane %>%  mutate_at(., vars("ID"), funs(as.numeric(str_remove(., "nr "))))
#zmieniam kolejność kolumn w data frame
dane <- dane %>% select(ID, data.zamieszczenia.oferty, termin.skladania.dokumentów,
tytul, opis.stanowiska, wymagania, warunki.pracy, zrodlo, url)
#zmieniam format daty
dane <- dane %>% mutate(termin.skladania.dokumentów =
str_replace_all(termin.skladania.dokumentów,
c(
"stycznia" = "01",
"lutego" = "02",
"marca" = "03",
"kwietnia" = "04",
"maja" = "05",
"czerwca" = "06",
"lipca" = "07",
"sierpnia" = "08",
"września" = "09",
"października" = "10",
"listopada" = "11",
"grudnia" = "12")) %>%
str_replace_all(" ", "."))
# dane <- dane %>% mutate_at(., vars("data.zamieszczenia.oferty", "termin.skladania.dokumentów"),
#                            funs(as_date(str_sub(., -10, -1))))
View(dane)
as_date("30.04.2019")
dmy("30.04.2019")
class(dmy("30.04.2019"))
dane <- dane %>% mutate_at(., vars("data.zamieszczenia.oferty", "termin.skladania.dokumentów"),
funs(dmy(str_sub(., -10, -1))))
lapply(dane, class)
View(dane)
rm(list =ls())
#pobieram dane
dane_ar <- read.csv("oferty-pracy-kprm_archiwum.csv")
dane_cu <- read.csv("oferty-pracy-kprm.csv")
#łączę dwa zbiory w jeden
dane <- bind_rows("aktualne" = dane_cu, "archiwum" = dane_ar, .id = "zrodło") %>%
#zmieniam typ źródła z character na factor
mutate_at(.tbl = dane, vars("zrodlo"), funs(as.factor)) %>%
#zmieniam kolejność kolumn, usuwam kolumnę X
select(ID, data.zamieszczenia.oferty, termin.skladania.dokumentów,
tytul, opis.stanowiska, wymagania, warunki.pracy, zrodlo, url, -X) %>%
#zmieniam typ ID z character na integer
mutate_at(., vars("ID"), funs(as.integer(str_remove(., "nr ")))) %>%
#zmieniam typ odpowiednich kolumn z character na Date
mutate(termin.skladania.dokumentów =
str_replace_all(termin.skladania.dokumentów,
c(
"stycznia" = "01",
"lutego" = "02",
"marca" = "03",
"kwietnia" = "04",
"maja" = "05",
"czerwca" = "06",
"lipca" = "07",
"sierpnia" = "08",
"września" = "09",
"października" = "10",
"listopada" = "11",
"grudnia" = "12")) %>%
str_replace_all(" ", ".")) %>%
mutate_at(., vars("data.zamieszczenia.oferty", "termin.skladania.dokumentów"),
funs(dmy(str_sub(., -10, -1))))
#łączę dwa zbiory w jeden
dane <- bind_rows("aktualne" = dane_cu, "archiwum" = dane_ar, .id = "zrodło")
#zmieniam typ źródła z character na factor
dane <- dane %>% mutate_at(.tbl = dane, vars("zrodlo"), funs(as.factor)) %>%
#zmieniam kolejność kolumn, usuwam kolumnę X
select(ID, data.zamieszczenia.oferty, termin.skladania.dokumentów,
tytul, opis.stanowiska, wymagania, warunki.pracy, zrodlo, url, -X) %>%
#zmieniam typ ID z character na integer
mutate_at(., vars("ID"), funs(as.integer(str_remove(., "nr ")))) %>%
#zmieniam typ odpowiednich kolumn z character na Date
mutate(termin.skladania.dokumentów =
str_replace_all(termin.skladania.dokumentów,
c(
"stycznia" = "01",
"lutego" = "02",
"marca" = "03",
"kwietnia" = "04",
"maja" = "05",
"czerwca" = "06",
"lipca" = "07",
"sierpnia" = "08",
"września" = "09",
"października" = "10",
"listopada" = "11",
"grudnia" = "12")) %>%
str_replace_all(" ", ".")) %>%
mutate_at(., vars("data.zamieszczenia.oferty", "termin.skladania.dokumentów"),
funs(dmy(str_sub(., -10, -1))))
"stycznia" = "01",
"stycznia" = "01",
dane <- dane %>% mutate_at(., vars("zrodlo"), funs(as.factor)) %>%
#zmieniam kolejność kolumn, usuwam kolumnę X
select(ID, data.zamieszczenia.oferty, termin.skladania.dokumentów,
tytul, opis.stanowiska, wymagania, warunki.pracy, zrodlo, url, -X) %>%
#zmieniam typ ID z character na integer
mutate_at(., vars("ID"), funs(as.integer(str_remove(., "nr ")))) %>%
#zmieniam typ odpowiednich kolumn z character na Date
mutate(termin.skladania.dokumentów = str_replace_all(termin.skladania.dokumentów,
c(
"stycznia" = "01",
"lutego" = "02",
"marca" = "03",
"kwietnia" = "04",
"maja" = "05",
"czerwca" = "06",
"lipca" = "07",
"sierpnia" = "08",
"września" = "09",
"października" = "10",
"listopada" = "11",
"grudnia" = "12")) %>%
str_replace_all(" ", ".")) %>%
mutate_at(., vars("data.zamieszczenia.oferty", "termin.skladania.dokumentów"),
funs(dmy(str_sub(., -10, -1))))
write.csv(dane, "dane.csv")
rm(list=ls())
dane <- read.csv("dane.csv")
View(dane)
lapply(dane, class)
str(dane)
#pobieram dane
dane_ar <- read.csv("oferty-pracy-kprm_archiwum.csv")
dane_cu <- read.csv("oferty-pracy-kprm.csv")
#łączę dwa zbiory w jeden
dane <- bind_rows("aktualne" = dane_cu, "archiwum" = dane_ar, .id = "zrodło")
#zmieniam typ źródła z character na factor
dane <- dane %>% mutate_at(., vars("zrodlo"), funs(as.factor)) %>%
#zmieniam kolejność kolumn, usuwam kolumnę X
select(ID, data.zamieszczenia.oferty, termin.skladania.dokumentów,
tytul, opis.stanowiska, wymagania, warunki.pracy, zrodlo, url, -X) %>%
#zmieniam typ ID z character na integer
mutate_at(., vars("ID"), funs(as.integer(str_remove(., "nr ")))) %>%
#zmieniam typ odpowiednich kolumn z character na Date
mutate(termin.skladania.dokumentów = str_replace_all(termin.skladania.dokumentów,
c(
"stycznia" = "01",
"lutego" = "02",
"marca" = "03",
"kwietnia" = "04",
"maja" = "05",
"czerwca" = "06",
"lipca" = "07",
"sierpnia" = "08",
"września" = "09",
"października" = "10",
"listopada" = "11",
"grudnia" = "12")) %>%
str_replace_all(" ", ".")) %>%
mutate_at(., vars("data.zamieszczenia.oferty", "termin.skladania.dokumentów"),
funs(dmy(str_sub(., -10, -1))))
View(dane)
saveRDS(dane, "dane.rds")
rm(list=ls())
dane <- readRDS("dane.rds")
View(dane)
library(tidyverse)
library(lubridate)
dane <- readRDS("dane.rds")
month(dane$data.zamieszczenia.oferty)
dane %>% group_by(month(data.zamieszczenia.oferty)) %>% count()
dane %>% group_by(month(data.zamieszczenia.oferty)) %>% count() %>% ggplot(., aes(x = n)) + geom_histogram()
dane %>% group_by(month(data.zamieszczenia.oferty)) %>% count()
dane %>% group_by(miesiac = month(data.zamieszczenia.oferty)) %>% count()
dane %>% group_by(miesiac = month(data.zamieszczenia.oferty)) %>%
count() %>%
ggplot(., aes(x = miesiac)) + geom_histogram()
dane %>% group_by(miesiac = month(data.zamieszczenia.oferty)) %>%
count() %>%
ggplot(., aes(x = miesiac)) + geom_bar()
dane %>% ggplot(., aes(x = month(data.zamieszczenia.oferty))) + geom_histogram()
head(dane)
library(dplyr)
head(dane)
View(dane)
dane1 <- dane %>% select(ID, opis.stanowiska)
dane1 <- dane1 %>% tibble()
dane1
View(dane1)
install.packages("tidytext")
library(tidytext)
dane1 %>%  unnest_tokens(output = word,
input = opis.stanowiska,
to_lower = TRUE)
install.packages("stopwords")
library(stopwords)
stop_words_pl <- stopwords(language = "pl", source = "stopwords-iso")
head(stop_words_pl, 20)
dane_tidy <- dane1 %>%
unnest_tokens(output = word,
input = opis.stanowiska,
to_lower = TRUE) %>%
anti_join(stop_words_pl) %>%
count(word, sort = TRUE)
dane_tidy <- dane1 %>%
unnest_tokens(output = word,
input = opis.stanowiska,
to_lower = TRUE)
dane_tidy <- dane_tidy %>%
anti_join(stop_words_pl) %>%
count(word, sort = TRUE)
class(stop_words_pl)
class(dane1)
class(tibble(stop_words_pl))
?anti_join
dane_tidy <- dane_tidy %>%
anti_join(tibble(stop_words_pl)) %>%
count(word, sort = TRUE)
print(stop_words)
print(stop_words_pl)
print(tibble(stop_words_pl))
data(stopwords_pl)
stop_words_pl <- stopwords(language = "pl", source = "stopwords-iso") %>% tibble()
class(stop_words_pl)
stop_words_pl <- stopwords(language = "pl", source = "stopwords-iso") %>% as.data.frame()
class(stop_words_pl)
dane_tidy <- dane_tidy %>%
anti_join(tibble(stop_words_pl)) %>%
count(word, sort = TRUE)
class(stop_words)
class(stop_words)
class(stop_words_pl)
stop_words_pl <- stopwords(language = "pl", source = "stopwords-iso") %>% tibble()
class(stop_words_pl)
dane_tidy <- dane_tidy %>%
anti_join(tibble(stop_words_pl)) %>%
count(word, sort = TRUE)
stop_words_pl <- stopwords(language = "pl", source = "stopwords-iso") %>% as.array()
dane_tidy <- dane_tidy %>%
anti_join(tibble(stop_words_pl)) %>%
count(word, sort = TRUE)
head(stop_words_pl)
colnames(stop_words_pl)
stop_words_pl <- stopwords(language = "pl", source = "stopwords-iso") %>% tibble()
colnames(stop_words_pl)
head(stop_words_pl)
dane_tidy <- dane_tidy %>%
anti_join(stop_words_pl, by = c("word" = ".")) %>%
count(word, sort = TRUE)
head(dane_tidy)
dane_tidy <- dane_tidy %>%
anti_join(stop_words_pl, by = c("word" = "."))
dane_tidy %>%
count(word, sort = TRUE) %>%
top_n(20) %>%
ggplot(aes(x = word, y = n))+
geom_col() +
xlab(NULL) +
coord_flip()
library(ggplot2)
dane_tidy %>%
count(word, sort = TRUE) %>%
top_n(20) %>%
ggplot(aes(x = word, y = n))+
geom_col() +
xlab(NULL) +
coord_flip()
dane_tidy %>%
count(word, sort = TRUE) %>%
top_n(20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y = n))+
geom_col() +
xlab(NULL) +
coord_flip()
dane_tidy %>%
count(word, sort = TRUE)
dane_tidy <- dane1 %>%
unnest_tokens(output = word,
input = opis.stanowiska,
to_lower = TRUE)
dane_tidy <- dane_tidy %>%
anti_join(stop_words_pl, by = c("word" = "."))
dane_tidy %>%
count(word, sort = TRUE) %>%
top_n(20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y = n))+
geom_col() +
xlab(NULL) +
coord_flip()
colnames(dane_tidy)
dane_tidy %>%
count(word, sort = TRUE) %>%
top_n(20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y = n))+
geom_col() +
xlab(NULL) +
coord_flip()
coord_flip()
coord_flip()
dane_tidy %>%
count(word, sort = TRUE) %>%
top_n(20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y = n))+
geom_col() +
xlab(NULL) +
ylab("Liczba wystąpień danego słowa we wszystkich ogłoszeniach o pracę KPRM") +
coord_flip()
dane_tidy %>%
count(word, sort = TRUE) %>%
top_n(20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y = n, fill = word))+
geom_col() +
xlab(NULL) +
ylab("Liczba wystąpień danego słowa we wszystkich ogłoszeniach o pracę KPRM") +
coord_flip()
theme_minimal() +
dane_tidy %>%
count(word, sort = TRUE) %>%
top_n(20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y = n, fill = word)) +
theme_minimal() +
geom_col() +
xlab(NULL) +
ylab("Liczba wystąpień danego słowa we wszystkich ogłoszeniach o pracę KPRM") +
coord_flip()
dane_tidy %>%
count(word, sort = TRUE) %>%
top_n(20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y = n)) +
theme_minimal() +
geom_col() +
xlab(NULL) +
ylab("Liczba wystąpień danego słowa we wszystkich ogłoszeniach o pracę KPRM") +
coord_flip()
?read.dic
??read.dic
library(quanteda)
polish_dict <- read_dict_liwc("polish.dict", encoding = "auto")
polish_dict <- dictionary(file = "polish.dict")
dane_tidy %>%
count(word, sort = TRUE) %>%
group_by(ID) %>%
summarise(total = sum(n))
dane_tidy %>%
count(word, sort = TRUE) %>%
group_by(ID)
colnames(dane_tidy)
dane_tidy %>%
group_by(ID) %>%
summarise(total = count(word))
dane_tidy %>%
group_by(ID) %>%
count(word, sort = TRUE)
dane_tidy %>%
group_by(ID) %>%
count(word, sort = TRUE) %>%
summarise(total = sum(n))
dane_tidy %>%
group_by(ID) %>%
count(word, sort = TRUE) %>%
summarise(total = sum(n), sort = TRUE)
total_words <- dane_tidy %>%
group_by(ID) %>%
count(word, sort = TRUE) %>%
summarise(total = sum(n))
dane_tidy %>% left_join(., total_words)
dane_tidy %>%
count(word, sort = TRUE) %>%
left_join(., total_words) %>%
head(., 20)
dane_tidy %>%
count(word, sort = TRUE) %>%
group_by(ID) %>%
left_join(., total_words) %>%
head(., 20)
dane_tidy %>%
group_by(ID) %>%
count(word, sort = TRUE) %>%
left_join(., total_words) %>%
head(., 20)
dane_tidy %>%
group_by(ID) %>%
count(word, sort = TRUE) %>%
left_join(., total_words) %>%
filter(word == "ochrony") %>%
head(., 20)
freq_by_rank <- dane_tidy %>%
group_by(ID) %>%
count(word, sort = TRUE) %>%
left_join(., total_words) %>%
#filter(word == "ochrony") %>%
mutate(rank = rownumber(), frequency = n/total_in_offer)
head(freq_by_rank, 20)
freq_by_rank <- dane_tidy %>%
group_by(ID) %>%
count(word, sort = TRUE) %>%
left_join(., total_words) %>%
#filter(word == "ochrony") %>%
mutate(rank = row_number(), frequency = n/total_in_offer)
total_words <- dane_tidy %>%
group_by(ID) %>%
count(word, sort = TRUE) %>%
summarise(total_in_offer = sum(n))
freq_by_rank <- dane_tidy %>%
group_by(ID) %>%
count(word, sort = TRUE) %>%
left_join(., total_words) %>%
#filter(word == "ochrony") %>%
mutate(rank = row_number(), frequency = n/total_in_offer)
head(freq_by_rank, 20)
head(dane_tidy)
dane_tidy <- dane_tidy %>%
count(word, sort = TRUE)
head(dane_tidy)
dane_tidy <- dane_tidy %>%
count(ID, word, sort = TRUE)
dane_tidy <- dane1 %>%
unnest_tokens(output = word,
input = opis.stanowiska,
to_lower = TRUE)
dane_tidy <- dane_tidy %>%
anti_join(stop_words_pl, by = c("word" = "."))
dane_tidy %>%
count(ID, word, sort = TRUE) %>%
head(20)
dane_tidy %>%
count(ID, word, sort = TRUE) %>%
bind_tf_idf(term = word, document = ID, n = n) %>%
head(20)
dane_tidy_tfidf %>%
select(-total) %>%
arrange(desc(tf_idf))
dane_tidy_tfidf <- dane_tidy %>%
count(ID, word, sort = TRUE) %>%
bind_tf_idf(term = word, document = ID, n = n) %>%
head(20)
dane_tidy_tfidf %>%
select(-total) %>%
arrange(desc(tf_idf))
dane_tidy_tfidf
dane_tidy_tfidf <- dane_tidy %>%
count(ID, word, sort = TRUE) %>%
bind_tf_idf(term = word, document = ID, n = n)
dane_tidy_tfidf %>%
arrange(desc(tf_idf)) %>%
head(.,20)
install.packages("topicsmodel")
install.packages("topicsmodel")
library(topicsmodel)
library(topicsmodel)
install.packages("topicmodels")
library(topicsmodel)
library(topicmodels)
dane_tidy %>%
head(,20)
dane_tidy %>%
count(ID, word, sort = TRUE) %>%
head(,20)
dane_dtm <- dane_tidy %>%
count(ID, word, sort = TRUE) %>%
cast_dtm(ID, word, n) %>%
head(,20)
dane_dtm <- dane_tidy %>%
count(ID, word, sort = TRUE) %>%
cast_dtm(ID, word, n) %>%
head(,20)
dane_dtm <- dane_tidy %>%
count(ID, word, sort = TRUE) %>%
cast_dtm(ID, word, n)
head(dane_dtm)
dane_dtm
ldaOut <- LDA(x = dane_dtm, k = 2)
library(broom)
topics <- tidy(ldaOut, matrix = "beta")
topics
topic_top_terms <- topics %>%
group_by(topic) %>%
top_n(15, beta) %>%
ungroup() %>%
arrange(topic, -beta)
topics
topic_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
beta_spread <- topics %>%
mutate(topic = paste0("topic", topic)) %>%
spread(topic, beta) %>%
filter(topic1 > .001 | topic2 > .001) %>%
mutate(log_ratio = log2(topic2 / topic1))
library(tidyr)
beta_spread <- topics %>%
mutate(topic = paste0("topic", topic)) %>%
spread(topic, beta) %>%
filter(topic1 > .001 | topic2 > .001) %>%
mutate(log_ratio = log2(topic2 / topic1))
beta_spread
x <- readr::read_rds("dane/dane.rds")
head(x)
rm(x)
x <- readr::read_rds("dane/dane_lda")
head(x)
x1 <- readr::read_rds("dane/k_temat1.rds")
head(x1)
x2 <- readr::read_rds("dane/k_temat2.rds")
head(x2)
